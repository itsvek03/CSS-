----------------------------------- HTML - 1 ----------------------

a)  HTML -> It is used to build the interface

b)  CSS -> To add styles to that webpage

c) Javascript --> To make page more dynamic

        HTML
a) Intro to HTML
b) HTML Elements and tags
c) HTML attributes

HTML Elements and tags

tag => basic unit of HTML
element => 3 units,namely
        a) opening tag
        b) content
        c) close tags


### Attributes

a) It is used to manipulate the properties of an HTML element
b) Attributes should be enclosed inside the opening tag of the HTML element
c) It also used to keep additional data about the tag

<div class="w3-center w3-medium" style="color:brown"></div>
Here :-> div is tag
        class and style are attributes

### Tables
a) Table is strict structure that means that u have to keep your data in a very structured manner in defined space

<table>
        <tr>
                <th>
                <td>
        <tbody>
Difference between <th> and <td>

rowspan
colspan
cell spacing
cell padding


### Make a Form

Form Elements



################# CSS
CSS
Css selectors
CSS Colors
CSS typography


----------------------------------- HTML - 2 ----------------------


-------------------- CSS ------------------
a) CSS is used to style the webpage.
b) It helps us in enriching the UX of a particular webpage
    UX -> User Experience
            a) User has to do a lot with minimum efforts


c) How to implement CSS in webpage
    a) 3 ways 
            a) Inline
                <p style="color:red">Hello</p>
            b) internal 
            c) External

d) selectors

    a) id selectors
    b) class selectors
    c) attribute selector
    c) child selectors
    d) group selectors
    e) Universal selectors
    f) Pseudo selectors


Precedence Level
a)ID selector
b)Class selector
c) Type Selector
d) Element Selector


# Pseudo-class Selector

a) First-child
        -> Modify the css of the first child
        -> Disadvantage : If we change the position of element than it will give an wrong css

b) First-of-type 
        -> Modify the css of each different type of element of the first type


There is same for last-child and last-of-type

c) <a> tag pseudo selector
        -> visited
        -> link
        -> hover
        -> focus

d) nth:child: paramter eg:-> odd,even,3n
Eg: -> ul li:nth-child(odd){
                color: deeppink;
        }

#Pseudo-element

a) first-letter eg: p::first-letter
b) first-line
c) selection
d) before

# -----  Difference between Pseudo-elements and Pseudo-classes

a) Pseudo-element -> To style part of an element
b) Pseudo-class -> To style element in an particular state 
eg:-> hovered Anchor

# Selectors specifiy

eg: -> <h1 class="highlight"> Hello World </h1>
        h1{
                color:red
        }

        .highlight{
                color:pink
        }

        // Which color will be used
--> So there are selector weight
        eg:-> ID
           -> Class and attribute selector
           -> Element Selector eg:section

# Inheritance
        q) How to stop the inheritance in css ?
                -> use initial value to a property
        q) How to explicit inherit the property in css ?
                -> use inherit value to a property 

#----------------- Text layout ------------

a) Letter-spacing :->
The letter-spacing property is used to set the horizontal spacing between the individual characters in an element.

b) Word-spacing :->
You can set the space between words with the word-spacing property.

c) line-height :->
We can use the line-height property to set how tall we want each line containing our text to be. 

Line height values can be a unitless number, such as 1.2, or a length value, such as 12px , 5% or 2em.

d) text-align :->
You can aligh the text 
eg: right,left,center
by default -> left

#------------- Box Model

a) content
b) padding
        ->The space between the contents of a box and the borders of a box is known as padding. 
        Padding is like the space between a picture and the frame surrounding it.
         In CSS, you can modify this space with the padding property.

        padding-top
        padding-right
        padding-bottom
        padding-left

c) Border
        -> A border is a line that surrounds an element, like a frame around a painting. Borders can be set with a specific width, style, and color:
        eg:-> p {
                border: 3px solid coral;
        }
        -> Border Radius:
        -> padding-top
        -> padding-right
        -> padding-bottom
        -> padding-left

d) Margin 
        -> By default margin is of 8 pixel
        Margin refers to the space directly outside of the box. The margin property is used to specify the size of this space.
                margin-top
                margin-right
                margin-bottom
                margin-left

                margin: args1 -> top let bottom right
                margin: args1 args2 -> top.bottom left,right
                margin :=> args1 args2 arg3 -> top left,right bottom

e) Dimension
        -> Width
        -> Height


#------------------ Display and Position ----------

CSS includes properties that change how a browser positions elements. 
These properties specify where an element is located on a page, if the element can share lines with other elements, and other related attributes.

a) position
b) Display
c) z-index
d) float
e) clear

Block Level Elements :->

a)  CSS treats each HTML element as if it is in its own box. This box will either be a block-level box or an inline box.
b)  Block-level boxes start on a new line and act as the main building blocks of any layout. eg:-> h1  p ul li
c)  Inline boxes flow between surrounding text.


position:->
a) static : (by default)
b) relative : a) If we add relative position to an element the n we can use top,bottom,left,right property
              b) This value allows you to position an element relative to its default static position on the web page.
c) absolute : a)When an element’s position is set to absolute, all other elements on the page will ignore the element and act like it is not present on the page. 
                The element will be positioned relative to its closest positioned parent element, 
                while offset properties can be used to determine the final position from there.
              b) It measures the css property with starting of its web page if none of the parents element have absolute property
                If someone has absolute property then it will start from there
                Note: first it will check previous parent element have position:absolute property if yes then it will start from there
                else if not then start from start of web page



        note :->1)  In relative if we write only position:relative nothing will happen to that element
                    In relative if we write only position:absolute nothing, it will give some value to z-index



d) fixed : When an element’s position is set to absolute, as we have seen just above,
                the element will scroll with the rest of the document when a user scrolls.


e) sticky : The sticky value is another position value that keeps an element in the document flow as the user scrolls, but sticks to a specified position as the page is scrolled further. 
This is done by using the sticky value along with the familiar offset properties, as well as one new one.


Difference between Fixed and Sticky:
Fixed start from the homepage
while 
Stciky start from the parent tag

#--------------------- Visibility and z-index ---------------

Visibility :hidden  -> It hides the element but takes the space of it

display:none  -> It hides and does not take any space of it




a) z-index -> It does not work on static position
        Higher the z-index value the top-most element will be

Eg:
#box1{
    width: 200px;
    height:200px;
    margin:5px;
    background-color: blue;
    border: 3px solid blue;
    position: relative;
    top:130px;
    z-index:30;

}

#box2{
    width: 200px;
    height:200px;
    margin:5px;
    background-color: red;
    border: 3px solid red;
    position: relative;
    top:20px;
   z-index: -1;
   
   
}

Difference between visiblity and collapse:
hidden means the element is invisible, though the space it takes on the page remains.

collapsed means the element is invisible, AND the space it takes on the page is gone, 
but it only applies to table elements (otherwise, just like hidden).



